// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// BCaCpp
NumericVector BCaCpp(NumericVector y, double sumy, int n, int B, double G, double alpha);
RcppExport SEXP _giniVarCI_BCaCpp(SEXP ySEXP, SEXP sumySEXP, SEXP nSEXP, SEXP BSEXP, SEXP GSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type sumy(sumySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(BCaCpp(y, sumy, n, B, G, alpha));
    return rcpp_result_gen;
END_RCPP
}
// tjackknife
NumericVector tjackknife(NumericVector y, int n, int B, double G);
RcppExport SEXP _giniVarCI_tjackknife(SEXP ySEXP, SEXP nSEXP, SEXP BSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(tjackknife(y, n, B, G));
    return rcpp_result_gen;
END_RCPP
}
// tlinearization
NumericVector tlinearization(NumericVector y, int n, int B, double G);
RcppExport SEXP _giniVarCI_tlinearization(SEXP ySEXP, SEXP nSEXP, SEXP BSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(tlinearization(y, n, B, G));
    return rcpp_result_gen;
END_RCPP
}
// tlinearizationA
NumericVector tlinearizationA(NumericVector y, int n, int B, double G);
RcppExport SEXP _giniVarCI_tlinearizationA(SEXP ySEXP, SEXP nSEXP, SEXP BSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(tlinearizationA(y, n, B, G));
    return rcpp_result_gen;
END_RCPP
}
// Linearization
double Linearization(NumericVector y, double G, int n, double meany);
RcppExport SEXP _giniVarCI_Linearization(SEXP ySEXP, SEXP GSEXP, SEXP nSEXP, SEXP meanySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type meany(meanySEXP);
    rcpp_result_gen = Rcpp::wrap(Linearization(y, G, n, meany));
    return rcpp_result_gen;
END_RCPP
}
// LinearizationA
double LinearizationA(NumericVector y, double G, int n, double meany);
RcppExport SEXP _giniVarCI_LinearizationA(SEXP ySEXP, SEXP GSEXP, SEXP nSEXP, SEXP meanySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type meany(meanySEXP);
    rcpp_result_gen = Rcpp::wrap(LinearizationA(y, G, n, meany));
    return rcpp_result_gen;
END_RCPP
}
// NormalityCpp
double NormalityCpp(NumericVector y, double G, int n, double meany);
RcppExport SEXP _giniVarCI_NormalityCpp(SEXP ySEXP, SEXP GSEXP, SEXP nSEXP, SEXP meanySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type meany(meanySEXP);
    rcpp_result_gen = Rcpp::wrap(NormalityCpp(y, G, n, meany));
    return rcpp_result_gen;
END_RCPP
}
// OgwangJackknife
double OgwangJackknife(NumericVector SORTy, double G, int n, double sumy, double sumiy);
RcppExport SEXP _giniVarCI_OgwangJackknife(SEXP SORTySEXP, SEXP GSEXP, SEXP nSEXP, SEXP sumySEXP, SEXP sumiySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type SORTy(SORTySEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type sumy(sumySEXP);
    Rcpp::traits::input_parameter< double >::type sumiy(sumiySEXP);
    rcpp_result_gen = Rcpp::wrap(OgwangJackknife(SORTy, G, n, sumy, sumiy));
    return rcpp_result_gen;
END_RCPP
}
// Order
NumericVector Order(NumericVector x, NumericVector y);
RcppExport SEXP _giniVarCI_Order(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(Order(x, y));
    return rcpp_result_gen;
END_RCPP
}
// Sort
NumericVector Sort(NumericVector x);
RcppExport SEXP _giniVarCI_Sort(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Sort(x));
    return rcpp_result_gen;
END_RCPP
}
// emplikBootCpp
NumericVector emplikBootCpp(NumericVector y, double G, int n, int B, double precisionEL, int maxiterEL, double alpha);
RcppExport SEXP _giniVarCI_emplikBootCpp(SEXP ySEXP, SEXP GSEXP, SEXP nSEXP, SEXP BSEXP, SEXP precisionELSEXP, SEXP maxiterELSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type precisionEL(precisionELSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterEL(maxiterELSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(emplikBootCpp(y, G, n, B, precisionEL, maxiterEL, alpha));
    return rcpp_result_gen;
END_RCPP
}
// emplikCpp
NumericVector emplikCpp(NumericVector y, double sumy, double G, int n, double criticalvalue, double precisionEL, int maxiterEL);
RcppExport SEXP _giniVarCI_emplikCpp(SEXP ySEXP, SEXP sumySEXP, SEXP GSEXP, SEXP nSEXP, SEXP criticalvalueSEXP, SEXP precisionELSEXP, SEXP maxiterELSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type sumy(sumySEXP);
    Rcpp::traits::input_parameter< double >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type criticalvalue(criticalvalueSEXP);
    Rcpp::traits::input_parameter< double >::type precisionEL(precisionELSEXP);
    Rcpp::traits::input_parameter< int >::type maxiterEL(maxiterELSEXP);
    rcpp_result_gen = Rcpp::wrap(emplikCpp(y, sumy, G, n, criticalvalue, precisionEL, maxiterEL));
    return rcpp_result_gen;
END_RCPP
}
// fginindex1Rcpp
List fginindex1Rcpp(NumericVector y, NumericVector w, int n);
RcppExport SEXP _giniVarCI_fginindex1Rcpp(SEXP ySEXP, SEXP wSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fginindex1Rcpp(y, w, n));
    return rcpp_result_gen;
END_RCPP
}
// fginindex2Rcpp
List fginindex2Rcpp(NumericVector y, NumericVector w, int n);
RcppExport SEXP _giniVarCI_fginindex2Rcpp(SEXP ySEXP, SEXP wSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fginindex2Rcpp(y, w, n));
    return rcpp_result_gen;
END_RCPP
}
// fginindex3Rcpp
List fginindex3Rcpp(NumericVector y, NumericVector w, int n);
RcppExport SEXP _giniVarCI_fginindex3Rcpp(SEXP ySEXP, SEXP wSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fginindex3Rcpp(y, w, n));
    return rcpp_result_gen;
END_RCPP
}
// fginindex4Rcpp
List fginindex4Rcpp(NumericVector y, NumericVector w, int n);
RcppExport SEXP _giniVarCI_fginindex4Rcpp(SEXP ySEXP, SEXP wSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fginindex4Rcpp(y, w, n));
    return rcpp_result_gen;
END_RCPP
}
// fginindex5Rcpp
List fginindex5Rcpp(NumericVector y, NumericVector w0, int n);
RcppExport SEXP _giniVarCI_fginindex5Rcpp(SEXP ySEXP, SEXP w0SEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w0(w0SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fginindex5Rcpp(y, w0, n));
    return rcpp_result_gen;
END_RCPP
}
// giniMeansRcpp
List giniMeansRcpp(NumericVector SORTx);
RcppExport SEXP _giniVarCI_giniMeansRcpp(SEXP SORTxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type SORTx(SORTxSEXP);
    rcpp_result_gen = Rcpp::wrap(giniMeansRcpp(SORTx));
    return rcpp_result_gen;
END_RCPP
}
// iginindex10Rcpp
double iginindex10Rcpp(NumericVector y, int n, bool bc, NumericMatrix Matrix, int NumCol);
RcppExport SEXP _giniVarCI_iginindex10Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP, SEXP MatrixSEXP, SEXP NumColSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Matrix(MatrixSEXP);
    Rcpp::traits::input_parameter< int >::type NumCol(NumColSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex10Rcpp(y, n, bc, Matrix, NumCol));
    return rcpp_result_gen;
END_RCPP
}
// iginindex1Rcpp
double iginindex1Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex1Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex1Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex2Rcpp
double iginindex2Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex2Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex2Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex3Rcpp
double iginindex3Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex3Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex3Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex4Rcpp
double iginindex4Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex4Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex4Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex5Rcpp
double iginindex5Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex5Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex5Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex7Rcpp
double iginindex7Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex7Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex7Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex8Rcpp
double iginindex8Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex8Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex8Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// iginindex9Rcpp
double iginindex9Rcpp(NumericVector y, int n, bool bc);
RcppExport SEXP _giniVarCI_iginindex9Rcpp(SEXP ySEXP, SEXP nSEXP, SEXP bcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type bc(bcSEXP);
    rcpp_result_gen = Rcpp::wrap(iginindex9Rcpp(y, n, bc));
    return rcpp_result_gen;
END_RCPP
}
// pBootstrap
NumericVector pBootstrap(NumericVector y, int n, int B, double alpha);
RcppExport SEXP _giniVarCI_pBootstrap(SEXP ySEXP, SEXP nSEXP, SEXP BSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(pBootstrap(y, n, B, alpha));
    return rcpp_result_gen;
END_RCPP
}
// rpBootstrap
NumericVector rpBootstrap(NumericVector y, NumericVector w, int n, int B, double alpha, int method);
RcppExport SEXP _giniVarCI_rpBootstrap(SEXP ySEXP, SEXP wSEXP, SEXP nSEXP, SEXP BSEXP, SEXP alphaSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(rpBootstrap(y, w, n, B, alpha, method));
    return rcpp_result_gen;
END_RCPP
}
// wJackknife
double wJackknife(NumericVector y, NumericVector w, NumericMatrix Delta, int n, double Ghat, double Nhat, String varformula, NumericVector PiU, int N, NumericVector ORDER, NumericVector reOrder, int method);
RcppExport SEXP _giniVarCI_wJackknife(SEXP ySEXP, SEXP wSEXP, SEXP DeltaSEXP, SEXP nSEXP, SEXP GhatSEXP, SEXP NhatSEXP, SEXP varformulaSEXP, SEXP PiUSEXP, SEXP NSEXP, SEXP ORDERSEXP, SEXP reOrderSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type Ghat(GhatSEXP);
    Rcpp::traits::input_parameter< double >::type Nhat(NhatSEXP);
    Rcpp::traits::input_parameter< String >::type varformula(varformulaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PiU(PiUSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ORDER(ORDERSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type reOrder(reOrderSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(wJackknife(y, w, Delta, n, Ghat, Nhat, varformula, PiU, N, ORDER, reOrder, method));
    return rcpp_result_gen;
END_RCPP
}
// wLinearization
double wLinearization(NumericVector y, NumericVector w, NumericMatrix Delta, int n, double Ghat, double Nhat, double MeanW, String varformula, NumericVector PiU, int N);
RcppExport SEXP _giniVarCI_wLinearization(SEXP ySEXP, SEXP wSEXP, SEXP DeltaSEXP, SEXP nSEXP, SEXP GhatSEXP, SEXP NhatSEXP, SEXP MeanWSEXP, SEXP varformulaSEXP, SEXP PiUSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type Ghat(GhatSEXP);
    Rcpp::traits::input_parameter< double >::type Nhat(NhatSEXP);
    Rcpp::traits::input_parameter< double >::type MeanW(MeanWSEXP);
    Rcpp::traits::input_parameter< String >::type varformula(varformulaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PiU(PiUSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(wLinearization(y, w, Delta, n, Ghat, Nhat, MeanW, varformula, PiU, N));
    return rcpp_result_gen;
END_RCPP
}
// wLinearizationA
double wLinearizationA(NumericVector reOrder, NumericVector w, NumericVector ySORT, NumericVector wSORT, NumericMatrix Delta, int n, double Ghat, double Nhat, double MeanW, String varformula, NumericVector PiU, int N);
RcppExport SEXP _giniVarCI_wLinearizationA(SEXP reOrderSEXP, SEXP wSEXP, SEXP ySORTSEXP, SEXP wSORTSEXP, SEXP DeltaSEXP, SEXP nSEXP, SEXP GhatSEXP, SEXP NhatSEXP, SEXP MeanWSEXP, SEXP varformulaSEXP, SEXP PiUSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type reOrder(reOrderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ySORT(ySORTSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wSORT(wSORTSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Delta(DeltaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type Ghat(GhatSEXP);
    Rcpp::traits::input_parameter< double >::type Nhat(NhatSEXP);
    Rcpp::traits::input_parameter< double >::type MeanW(MeanWSEXP);
    Rcpp::traits::input_parameter< String >::type varformula(varformulaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PiU(PiUSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(wLinearizationA(reOrder, w, ySORT, wSORT, Delta, n, Ghat, Nhat, MeanW, varformula, PiU, N));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_giniVarCI_BCaCpp", (DL_FUNC) &_giniVarCI_BCaCpp, 6},
    {"_giniVarCI_tjackknife", (DL_FUNC) &_giniVarCI_tjackknife, 4},
    {"_giniVarCI_tlinearization", (DL_FUNC) &_giniVarCI_tlinearization, 4},
    {"_giniVarCI_tlinearizationA", (DL_FUNC) &_giniVarCI_tlinearizationA, 4},
    {"_giniVarCI_Linearization", (DL_FUNC) &_giniVarCI_Linearization, 4},
    {"_giniVarCI_LinearizationA", (DL_FUNC) &_giniVarCI_LinearizationA, 4},
    {"_giniVarCI_NormalityCpp", (DL_FUNC) &_giniVarCI_NormalityCpp, 4},
    {"_giniVarCI_OgwangJackknife", (DL_FUNC) &_giniVarCI_OgwangJackknife, 5},
    {"_giniVarCI_Order", (DL_FUNC) &_giniVarCI_Order, 2},
    {"_giniVarCI_Sort", (DL_FUNC) &_giniVarCI_Sort, 1},
    {"_giniVarCI_emplikBootCpp", (DL_FUNC) &_giniVarCI_emplikBootCpp, 7},
    {"_giniVarCI_emplikCpp", (DL_FUNC) &_giniVarCI_emplikCpp, 7},
    {"_giniVarCI_fginindex1Rcpp", (DL_FUNC) &_giniVarCI_fginindex1Rcpp, 3},
    {"_giniVarCI_fginindex2Rcpp", (DL_FUNC) &_giniVarCI_fginindex2Rcpp, 3},
    {"_giniVarCI_fginindex3Rcpp", (DL_FUNC) &_giniVarCI_fginindex3Rcpp, 3},
    {"_giniVarCI_fginindex4Rcpp", (DL_FUNC) &_giniVarCI_fginindex4Rcpp, 3},
    {"_giniVarCI_fginindex5Rcpp", (DL_FUNC) &_giniVarCI_fginindex5Rcpp, 3},
    {"_giniVarCI_giniMeansRcpp", (DL_FUNC) &_giniVarCI_giniMeansRcpp, 1},
    {"_giniVarCI_iginindex10Rcpp", (DL_FUNC) &_giniVarCI_iginindex10Rcpp, 5},
    {"_giniVarCI_iginindex1Rcpp", (DL_FUNC) &_giniVarCI_iginindex1Rcpp, 3},
    {"_giniVarCI_iginindex2Rcpp", (DL_FUNC) &_giniVarCI_iginindex2Rcpp, 3},
    {"_giniVarCI_iginindex3Rcpp", (DL_FUNC) &_giniVarCI_iginindex3Rcpp, 3},
    {"_giniVarCI_iginindex4Rcpp", (DL_FUNC) &_giniVarCI_iginindex4Rcpp, 3},
    {"_giniVarCI_iginindex5Rcpp", (DL_FUNC) &_giniVarCI_iginindex5Rcpp, 3},
    {"_giniVarCI_iginindex7Rcpp", (DL_FUNC) &_giniVarCI_iginindex7Rcpp, 3},
    {"_giniVarCI_iginindex8Rcpp", (DL_FUNC) &_giniVarCI_iginindex8Rcpp, 3},
    {"_giniVarCI_iginindex9Rcpp", (DL_FUNC) &_giniVarCI_iginindex9Rcpp, 3},
    {"_giniVarCI_pBootstrap", (DL_FUNC) &_giniVarCI_pBootstrap, 4},
    {"_giniVarCI_rpBootstrap", (DL_FUNC) &_giniVarCI_rpBootstrap, 6},
    {"_giniVarCI_wJackknife", (DL_FUNC) &_giniVarCI_wJackknife, 12},
    {"_giniVarCI_wLinearization", (DL_FUNC) &_giniVarCI_wLinearization, 10},
    {"_giniVarCI_wLinearizationA", (DL_FUNC) &_giniVarCI_wLinearizationA, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_giniVarCI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
